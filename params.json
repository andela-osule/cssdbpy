{
  "name": "Ssdbpy",
  "tagline": "Fast and simple SSDB client written on cython.",
  "body": "What is SSDB?\r\n-------------\r\n\r\nSSDB is a high performace key-value(key-string, key-zset, key-hashmap) NoSQL database, an alternative to Redis.\r\nSSDB is stable, production-ready and is widely used by many Internet companies including QIHU 360. It's repository is https://github.com/ideawu/ssdb\r\n\r\n\r\nFeatures\r\n--------\r\n\r\n * LevelDB client-server support, written in C/C++\r\n * Designed to store collection data\r\n * Persistent key-value, key-zset, key-map('hashmap') storage\r\n * Redis clients are supported\r\n * Client API supports including C++, PHP, Python, Cpy, Java, nodejs, Ruby, Go\r\n * Persistent queue service\r\n * Replication(master-slave), load balance\r\n * GUI administration tool(phpssdbadmin)\r\n * Built-in CLI nagios self-checks\r\n\r\n\r\nAbout ssdbpy\r\n-------------\r\n\r\nssdbpy is a simple SSDB client written on Cython. 5x faster standart ssdb client.\r\nIt's repository is https://github.com/deslum/ssdbpy\r\n\r\n\r\nInstall\r\n-------\r\n\r\n   pip install ssdbpy\r\n\r\nor\r\n   pip install https://github.com/deslum/ssdbpy\r\n\r\nConnection\r\n----------\r\n\r\n    >>> from ssdbpy import SSDBPy\r\n    >>> ssdb = SSDBPy('127.0.0.1', 8888)\r\n\r\nhset\r\n---------------\r\nSet the string value in argument as value of the key of a hashmap.\r\n\r\n    >>> ssdb.execute('hset', 'test', 'hash', '1')\r\n    '1'\r\n\r\nhget\r\n----\r\nGet the value related to the specified key of a hashmap\r\n\r\n    >>> ssdb.execute('hget', 'test', 'hash')\r\n    '1'\r\n\r\nhdel\r\n----\r\n\r\nDelete specified key of a hashmap.\r\n\r\n    >>> ssdb.execute('hdel', 'test', 'hash')\r\n    '1'\r\n\r\nhincr\r\n-----\r\n\r\nIncrement the number stored at key in a hashmap by num. The num argument could be a negative integer. The old number is first converted to an integer before increment, assuming it was stored as literal integer.\r\n\r\n    >>> ssdb.execute('hincr', 'test', 'hash', 1)\r\n    '1'\r\n\r\nhscan\r\n-----\r\n\r\nList key-value pairs of a hashmap with keys in range (key_start, key_end]\r\n\r\n    >>> ssdb.execute('hscan', 'test', '', '', '-1')\r\n    ['hash', '1']\r\n\r\nhkeys\r\n-----\r\n\r\nList keys of a hashmap in range (key_start, key_end].\r\n\r\n    >>> ssdb.execute('hkeys', 'test', '', '', '-1')\r\n    ['hash']\r\n\r\nhsize\r\n-----\r\n\r\nReturn the number of key-value pairs in the hashmap.\r\n\r\n    >>> ssdb.execute('hsize', 'test')\r\n    3\r\n\r\nhlist\r\n-----\r\n\r\nList hashmap names in range (name_start, name_end]\r\n\r\n    >>> ssdb.execute('hlist', '', '')\r\n    3\r\n\r\nhgetall\r\n-------\r\n\r\nReturns the whole hash, as an array of strings indexed by strings.\r\n\r\n    >>> ssdb.execute('hgetall', 'test')\r\n    3\r\n\r\nhclear\r\n------\r\n\r\nDelete all keys in a hashmap.\r\n\r\n    >>> ssdb.execute('hgetall', 'test')\r\n    3\r\n\r\nmulti_hset\r\n----------\r\n\r\nSet multiple key-value pairs(kvs) of a hashmap in one method call.\r\n\r\n    >>> ssdb.execute('hgetall', 'test')\r\n    3\r\n\r\nmulti_hget\r\n----------\r\n\r\nGet the values related to the specified multiple keys of a hashmap.\r\n\r\n    >>> ssdb.execute('hgetall', 'test')\r\n    3\r\n\r\nmulti_hdel\r\n----------\r\n\r\nDelete specified multiple keys in a hashmap.\r\n\r\n    >>> ssdb.execute('hgetall', 'test')\r\n    3\r\n\r\n\r\nQuestions?\r\n---------------------------\r\n\r\nrandomazer@gmail.com\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}